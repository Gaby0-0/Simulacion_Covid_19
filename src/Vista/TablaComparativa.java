/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Vista;

import static Conexion.CConexion.conectar;
import Controlador.ControladorTabla;
import static Controlador.ControladorTabla.ListarTabla;
import java.awt.Color;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author HP
 */
public class TablaComparativa extends javax.swing.JFrame {    
    ControladorTabla ctrl = new ControladorTabla();    
    private static String  seleccion;    
    private static boolean bool;
    private static ArrayList <String> archivos = new ArrayList<>();
    private DefaultTableModel TablaComparativa;
    /**
     * Creates new form TablaComparativa
     */
    public TablaComparativa() {
        initComponents();
        
        agregaArchivos( );
         this.setLocation(500,150);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        txtBuscar = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        TablaComparativaa = new javax.swing.JTable();
        jLabel9 = new javax.swing.JLabel();
        choice1 = new java.awt.Choice();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jPanel2.setBackground(new java.awt.Color(200, 214, 191));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1231, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 69, Short.MAX_VALUE)
        );

        txtBuscar.setForeground(new java.awt.Color(153, 153, 153));
        txtBuscar.setText("Buscar");
        txtBuscar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                txtBuscarMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                txtBuscarMouseExited(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                txtBuscarMouseReleased(evt);
            }
        });
        txtBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBuscarActionPerformed(evt);
            }
        });
        txtBuscar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtBuscarKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtBuscarKeyReleased(evt);
            }
        });

        jLabel13.setBackground(new java.awt.Color(0, 0, 0));
        jLabel13.setFont(new java.awt.Font("Cooper Black", 0, 42)); // NOI18N
        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel13.setText("COVID-19");
        jLabel13.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Vista/home_3614942.png"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        TablaComparativaa.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"", null, null, null, null, null, null, null, null, null},
                {null, "", null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Semana", "Fecha", "Infectados", "Infectados_Sim", "Expuestos", "Expuestos_Sim", "Recuperados", "Recuperados_Sim", "Suceptibles", "Susceptibles_Sim"
            }
        ));
        TablaComparativaa.setGridColor(new java.awt.Color(250, 250, 250));
        TablaComparativaa.setSelectionBackground(new java.awt.Color(0, 51, 153));
        jScrollPane2.setViewportView(TablaComparativaa);

        jLabel9.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N
        jLabel9.setText("Archivos disponibles para graficar en base al modelo:");

        jButton3.setBackground(new java.awt.Color(204, 204, 255));
        jButton3.setText("Cargar");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(215, 215, 215)
                .addComponent(txtBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 407, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(130, 130, 130)
                .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(42, 42, 42))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(429, 1128, Short.MAX_VALUE)
                        .addComponent(jButton3))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel9)
                        .addGap(50, 50, 50)
                        .addComponent(choice1, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane2))
                .addGap(25, 25, 25))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel13))
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 333, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(choice1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtBuscarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtBuscarMouseEntered
        // TODO add your handling code here:
        if(txtBuscar.getText().equals("")){
            txtBuscar.setText("Buscar");
            txtBuscar.setForeground(Color.gray);
        }
    }//GEN-LAST:event_txtBuscarMouseEntered

    private void txtBuscarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtBuscarMouseExited
        // TODO add your handling code here:
        if(txtBuscar.getText().equals("")){
            txtBuscar.setText("Buscar");
            txtBuscar.setForeground(Color.gray);
        }
    }//GEN-LAST:event_txtBuscarMouseExited

    private void txtBuscarMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtBuscarMouseReleased
        // TODO add your handling code here:
        if(txtBuscar.getText().equals("Buscar") || txtBuscar.getText().equals("")){
            txtBuscar.setText("");
            txtBuscar.setForeground(Color.black);
        }
    }//GEN-LAST:event_txtBuscarMouseReleased

    private void txtBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBuscarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBuscarActionPerformed

    private void txtBuscarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuscarKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBuscarKeyPressed

    private void txtBuscarKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuscarKeyReleased
        // TODO add your handling code here:
        ControladorTabla.buscarDatos(txtBuscar.getText());
    }//GEN-LAST:event_txtBuscarKeyReleased

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        ctrl.inicio();
        this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        System.out.println("Se activó el botón");
DefaultTableModel md = new DefaultTableModel();
seleccion = choice1.getSelectedItem();
ResultSet rs = ListarTabla("SELECT * FROM datostablas");
System.out.println("Este es el archivo seleccionado: " + seleccion);

// Modificar las columnas de la tabla para que coincidan con el formato requerido
md.setColumnIdentifiers(new Object[]{"Semana", "Fecha", "Infectados", "Infectados_Sim", "Expuestos", "Expuestos_Sim", "Recuperados", "Recuperados_Sim", "Susceptibles", "Susceptibles_Sim"});

try {
    // Establecer los datos de la base de datos en un mapa
    Map<String, String[]> baseDeDatosMap = new HashMap<>();
    while (rs.next()) {
        String semana = rs.getString("Semana");
        String fecha = rs.getString("Fecha"); // Fecha de la base de datos
        String infectadosSim = rs.getString("Infectados_Sim");
        String expuestosSim = rs.getString("Expuestos_Sim");
        String recuperadosSim = rs.getString("Recuperados_Sim");
        String susceptiblesSim = rs.getString("Susceptibles_Sim");

        // Guardar los datos en el mapa usando la semana como clave
        baseDeDatosMap.put(semana, new String[]{fecha, infectadosSim, expuestosSim, recuperadosSim, susceptiblesSim});
    }

    // Crear un objeto File a partir de la selección
    File archivoCSV = new File(seleccion);    

    // Método modificado para recibir el mapa de datos de la base
    cargarDatosEnTabla(archivoCSV, md, baseDeDatosMap);  // Método modificado para recibir el mapa de datos de la base

    // Establecer el modelo de la tabla con los datos combinados
    TablaComparativaa.setModel(md);
} catch (Exception e) {
    JOptionPane.showMessageDialog(null, "Error al conectar con la base de datos: " + e.toString());
}

bool = false;

    }//GEN-LAST:event_jButton3ActionPerformed

   public static void cargarDatosEnTabla(File archivoCSV, DefaultTableModel model, Map<String, String[]> baseDeDatosMap) { 
    try {
        // Verificar si el archivo existe antes de leerlo
        if (!archivoCSV.exists()) {
            JOptionPane.showMessageDialog(null, "El archivo seleccionado no existe: " + archivoCSV.getAbsolutePath(), "Error", JOptionPane.ERROR_MESSAGE);
            return; // Terminar la ejecución si el archivo no existe
        }

        // Abrir el archivo CSV para leerlo
        BufferedReader br = new BufferedReader(new FileReader(archivoCSV));

        // Leer las cabeceras del archivo CSV y agregarlas a la tabla (si no están ya en el modelo)
        String headerLine = br.readLine(); // Leer la primera línea (cabeceras)
        if (headerLine != null) {
            String[] cabeceras = headerLine.split(",");
            if (model.getColumnCount() == 0) { // Solo agregar columnas si el modelo está vacío
                model.addColumn("Semana");
                model.addColumn("Fecha");
                model.addColumn("Infectados");
                model.addColumn("Infectados_Sim");
                model.addColumn("Expuestos");
                model.addColumn("Expuestos_Sim");
                model.addColumn("Recuperados");
                model.addColumn("Recuperados_Sim");
                model.addColumn("Susceptibles");
                model.addColumn("Susceptibles_Sim");
            }
        } else {
            System.out.println("El archivo CSV está vacío o no tiene cabeceras.");
            return;
        }

        // Leer las filas del archivo CSV y combinarlas con los datos de la base de datos
        String linea;
        while ((linea = br.readLine()) != null) {
            String[] datosCSV = linea.split(","); // Separar por comas

            String semanaCSV = datosCSV.length > 0 ? datosCSV[0] : ""; // Asumir que la primera columna es la semana
            String fechaCSV = datosCSV.length > 1 ? datosCSV[1] : ""; // Asumir que la segunda columna es la fecha

            // Verificar si la semana del CSV tiene datos en el mapa de la base de datos
            if (baseDeDatosMap.containsKey(semanaCSV)) {
                String[] baseDeDatos = baseDeDatosMap.get(semanaCSV);

                // Crear una fila combinando los datos del CSV y de la base de datos
                Object[] fila = new Object[model.getColumnCount()];
                fila[0] = semanaCSV;  // Semana
                fila[1] = fechaCSV;   // Fecha (del CSV)
                fila[2] = datosCSV.length > 2 ? datosCSV[2] : "";  // Infectados (del CSV)
                fila[3] = baseDeDatos[1];  // Infectados_Sim (de la base de datos)
                fila[4] = datosCSV.length > 3 ? datosCSV[3] : "";  // Expuestos (del CSV)
                fila[5] = baseDeDatos[2];  // Expuestos_Sim (de la base de datos)
                fila[6] = datosCSV.length > 4 ? datosCSV[4] : "";  // Recuperados (del CSV)
                fila[7] = baseDeDatos[3];  // Recuperados_Sim (de la base de datos)
                fila[8] = datosCSV.length > 5 ? datosCSV[5] : "";  // Susceptibles (del CSV)
                fila[9] = baseDeDatos[4];  // Susceptibles_Sim (de la base de datos)

                // Agregar la fila a la tabla
                model.addRow(fila);
            }
        }

        // Cerrar el BufferedReader
        br.close();
    } catch (IOException e) {
        e.printStackTrace();
        JOptionPane.showMessageDialog(null, "Error al leer el archivo CSV: " + e.getMessage());
    } catch (Exception e) {
        e.printStackTrace();
        JOptionPane.showMessageDialog(null, "Error inesperado: " + e.getMessage());
    }
}

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TablaComparativa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TablaComparativa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TablaComparativa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TablaComparativa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TablaComparativa().setVisible(true);
            }
        });
    }
    
  






    public void agregaArchivos( ){
        archivos.clear();
        archivos =ctrl.obtenerArchivos();
        choice1.removeAll();
            for(int  i = 0; i<archivos.size(); i++)
            choice1.add(archivos.get(i));
            System.out.println(archivos.size());
        
    }

    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JTable TablaComparativaa;
    private java.awt.Choice choice1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField txtBuscar;
    // End of variables declaration//GEN-END:variables

}
